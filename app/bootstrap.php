<?php

// Load Nette Framework or autoloader generated by Composer
require __DIR__ . '/../libs/autoload.php';

define("BASE_DIR", __DIR__.'/..');
define("SCRIPTS_DIR", BASE_DIR.'/scripts');
define("APP_DIR", BASE_DIR . '/app');
define("LIBS_DIR", BASE_DIR . "/libs");
define("TEMP_DIR", BASE_DIR."/temp");
define("LOG_DIR", BASE_DIR."/log");
define("ENTITY_DIR", APP_DIR.'/model/database/entity');
define("COMPONENTS_DIR", APP_DIR.'/templates/components');

if(!is_dir(TEMP_DIR)) {
	mkdir(TEMP_DIR, 0777, true);
}

function doctrineDump($var, $maxDepth = 2, $stripTags = TRUE) {
	return \Doctrine\Common\Util\Debug::dump($var, $maxDepth, $stripTags);
}

$configurator = new Nette\Config\Configurator;

// Enable Nette Debugger for error visualisation & logging
//$configurator->setDebugMode(TRUE);
$configurator->enableDebugger(__DIR__ . '/../log');

// Enable RobotLoader - this will load all classes automatically
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->addDirectory(SCRIPTS_DIR)
	->register();

// Create Dependency Injection container from config.neon file
$configurator->addConfig(__DIR__ . '/config/config.neon');
$configurator->addConfig(__DIR__ . '/config/config.local.neon', $configurator::NONE); // none section
$container = $configurator->createContainer();

return $container;
